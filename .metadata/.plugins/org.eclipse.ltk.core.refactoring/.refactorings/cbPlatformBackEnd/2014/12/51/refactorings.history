<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Encapsulate field &apos;rulePack.clClassCondition.checkClassName&apos; in &apos;rulePack.clClassCondition&apos;&#x0D;&#x0A;- Original project: &apos;cbPlatformBackEnd&apos;&#x0D;&#x0A;- Original element: &apos;rulePack.clClassCondition.checkClassName&apos;&#x0D;&#x0A;- Getter method name: &apos;getCheckClassName&apos;&#x0D;&#x0A;- Setter method name: &apos;setCheckClassName&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;checkClassName&apos;" flags="589830" getter="getCheckClassName" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;rulePack{clClassCondition.java[clClassCondition^checkClassName" insertion="-1" setter="setCheckClassName" stamp="1419079870403" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;rulePack.clClassCondition.checkConstructor&apos; in &apos;rulePack.clClassCondition&apos;&#x0D;&#x0A;- Original project: &apos;cbPlatformBackEnd&apos;&#x0D;&#x0A;- Original element: &apos;rulePack.clClassCondition.checkConstructor&apos;&#x0D;&#x0A;- Getter method name: &apos;isCheckConstructor&apos;&#x0D;&#x0A;- Setter method name: &apos;setCheckConstructor&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;checkConstructor&apos;" flags="589830" getter="isCheckConstructor" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;rulePack{clClassCondition.java[clClassCondition^checkConstructor" insertion="1" setter="setCheckConstructor" stamp="1419079884893" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Rename local variable &apos;ruleSetCond&apos; in &apos;controller.IFObjectValidator.evaluate(...)&apos; to &apos;excCondition&apos;&#x0D;&#x0A;- Original project: &apos;cbPlatformBackEnd&apos;&#x0D;&#x0A;- Original element: &apos;controller.IFObjectValidator.evaluate(String, clRuleConditions, clFeed).ruleSetCond&apos;&#x0D;&#x0A;- Renamed element: &apos;ruleSetCond&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;ruleSetCond&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;controller{IFObjectValidator.java[IFObjectValidator~evaluate~QString;~QclRuleConditions;~QclFeed;@ruleSetCond!331!358!348!358!QclRuleConditions;!0!true" name="excCondition" references="true" stamp="1419080177543" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;ruleSetCond&apos; in &apos;rulePack.IFRuleSet.evaluate(...)&apos; to &apos;excCondition&apos;&#x0D;&#x0A;- Original project: &apos;cbPlatformBackEnd&apos;&#x0D;&#x0A;- Original element: &apos;rulePack.IFRuleSet.evaluate(clRuleConditions, clFeed).ruleSetCond&apos;&#x0D;&#x0A;- Renamed element: &apos;ruleSetCond&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;ruleSetCond&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;rulePack{IFRuleSet.java[IFRuleSet~evaluate~QclRuleConditions;~QclFeed;@ruleSetCond!742!769!759!769!QclRuleConditions;!0!true" name="excCondition" references="true" stamp="1419080218863" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;excConditionTable&apos; in &apos;rulePack.clRuleHasClassName.checkRule(...)&apos; to &apos;excClsCond&apos;&#x0D;&#x0A;- Original project: &apos;cbPlatformBackEnd&apos;&#x0D;&#x0A;- Original element: &apos;rulePack.clRuleHasClassName.checkRule(clRuleConditions, clFeed).excConditionTable&apos;&#x0D;&#x0A;- Renamed element: &apos;excConditionTable&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;excConditionTable&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;rulePack{clRuleHasClassName.java[clRuleHasClassName~checkRule~QclRuleConditions;~QclFeed;@excConditionTable!539!573!556!572!QclClassCondition;!0!false" name="excClsCond" references="true" stamp="1419080511244" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;checkClassName&apos; in &apos;rulePack.clClassCondition&apos; to &apos;className&apos;&#x0D;&#x0A;- Original project: &apos;cbPlatformBackEnd&apos;&#x0D;&#x0A;- Original element: &apos;rulePack.clClassCondition.checkClassName&apos;&#x0D;&#x0A;- Renamed element: &apos;rulePack.clClassCondition.className&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;checkClassName&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;rulePack{clClassCondition.java[clClassCondition^checkClassName" name="className" references="true" setter="false" stamp="1419080602614" textual="false" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Encapsulate field &apos;rulePack.clClassCondition.className&apos; in &apos;rulePack.clClassCondition&apos;&#x0D;&#x0A;- Original project: &apos;cbPlatformBackEnd&apos;&#x0D;&#x0A;- Original element: &apos;rulePack.clClassCondition.className&apos;&#x0D;&#x0A;- Getter method name: &apos;getClassName&apos;&#x0D;&#x0A;- Setter method name: &apos;setClassName&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;className&apos;" flags="589830" getter="getClassName" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;rulePack{clClassCondition.java[clClassCondition^className" insertion="1" setter="setClassName" stamp="1419080633194" version="1.0" visibility="1"/>
</session>